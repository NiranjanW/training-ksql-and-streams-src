version: '3.5'
services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:4.1.0"
    networks:
      - ksql-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: "confluentinc/cp-enterprise-kafka:4.1.0"
    networks:
      - ksql-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:32181
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_ENABLE: 'true'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: "confluentinc/cp-schema-registry:4.1.0"
    networks:
      - ksql-net
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:32181

  ksql-server:
    image: "confluentinc/ksql-cli:4.1.0"
    networks:
      - ksql-net
    volumes:
      - ./ksql-server-entrypoint.sh:/ksql-server-entrypoint.sh
    command: /ksql-server-entrypoint.sh
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_OPTS: "-Dbootstrap.servers=kafka:29092 -Dksql.schema.registry.url=http://schema-registry:8081 -Dlisteners=http://0.0.0.0:8088"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j-rolling.properties"

networks:
  ksql-net: